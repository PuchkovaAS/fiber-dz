// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package layout

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fiber-dz/views/components"

func Header() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = HeaderStyle().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<header class=\"header\"><div class=\"header-left\"><!-- Текстовый логотип вместо картинки --><h2 class=\"logo\">Новости</h2><!-- Навигация с выпадающим меню --><nav class=\"nav\"><div class=\"nav-item categories\"><span>Категории</span> <span class=\"dropdown-icon\">⌄</span><div class=\"dropdown-menu\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div></div><a href=\"/contacts\" class=\"nav-item\">Контакты</a></nav></div><div class=\"header-right\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.SearchPanel().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Auth().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div></header>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func HeaderStyle() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<style>\n        /* Базовые стили */\n        .header {\n margin: 0 auto;\n            width: 100%;\n            max-width: 1512px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 15px 5%;\n            background-color: #fff;\n        }\n        \n        /* Логотип */\n        .logo {\n            color: #ff0000; /* Красный цвет */\n          font-family: \"Roboto\", sans-serif;\n            font-size: 22px;\n            font-weight: 700; /* Bold */\n            margin: 0;\n            text-decoration: none;\n            line-height: 1.2;\n        }\n        \n        /* Левая часть хедера */\n        .header-left {\n            display: flex;\n            align-items: center;\n            gap: 40px;\n\n font-family: \"AgH5\", sans-serif; \n font-size: 16px; /* Размер как в H5 */\n            letter-spacing: 0.5px; /* Характерный для AgH5 интервал */\n            transition: color 0.2s ease;\n        }\n        \n        /* Навигация */\n        .nav {\n            display: flex;\n            gap: 25px;\n        }\n        \n        .nav-item {\n            position: relative;\n            color: #333;\n            text-decoration: none;\n            font-weight: 500;\n            padding: 8px 0;\n            display: flex;\n            align-items: center;\n            gap: 5px;\n        }\n        \n        /* Выпадающее меню категорий */\n        .categories {\n            cursor: pointer;\n        }\n        \n        .categories:hover .dropdown-menu {\n            display: block;\n        }\n        \n        .dropdown-menu {\n            display: none;\n            position: absolute;\n            top: 100%;\n            left: 0;\n            background: #fff;\n            border-radius: 8px;\nborder: 1px solid #e0e0e0; \n            min-width: 200px;\n            padding: 10px 0;\n            z-index: 100;\n        }\n        \n        \n        /* Правая часть хедера */\n        .header-right {\n            display: flex;\n            align-items: center;\n            gap: 25px;\n        }\n        \n        /* Анимации */\n        .dropdown-icon {\n            transition: transform 0.3s ease;\n        }\n        \n        .categories:hover .dropdown-icon {\n            transform: rotate(180deg);\n        }\n        \n    </style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
